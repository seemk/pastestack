
$ ->
    $("#hide_history_btn").click ->
        table = $("#historyTable")
        if table.is ":hidden"
            table.show()
            $(this).text("hide")
        else
            table.hide()
            $(this).text("show")
        false

    $('#drop-area').bind "drop", (evt) ->
        evt.stopPropagation()
        evt.preventDefault()
        origEvt = evt.originalEvent
        files = origEvt.dataTransfer.files
        return if files.length == 0

        file = files[0]
        reader = new FileReader()

        progressBar = $('#file-progress-bar')
        progressArea = $('#file-progress')

        reader.onloadend = (evt) ->
            if evt.target.readyState is FileReader.DONE
                $('#drop-area').val evt.target.result
                $('#paste_title').val file.name.replace(/\.[^/.]+$/, "")
                progressBar.css('width', '100%')
            return

        reader.onerror = (evt) ->
            progressArea.css('display', 'none')
            return

        reader.onload = (evt) ->
            progressArea.css('display', 'none')
            return

        reader.onprogress = (evt) ->
            if evt.lengthComputable
                loaded = Math.round((evt.loaded / evt.total) * 100)
                console.log loaded
                if loaded <= 100
                    progressBar.css('width', loaded + '%')
            return

        reader.onloadstart = (evt) ->
            progressArea.css('display', 'block')
            return

        reader.readAsText file
        return

    makeTitle = (paste) ->
        lang_part = ""
        lang_part = "[" + paste.language + "] " if paste.language
        lang_part + paste.title

    $("#search_field").autocomplete
        source: (request, response) ->
            $.ajax
                url: "/ac_search"
                dataType: "json"
                data:
                    name: request.term
                success: (data) ->
                    console.log data
                    response $.map(data, (paste) ->
                        label: makeTitle(paste)
                        value: paste.token
                    )
                    return
        minLength: 2
        select: (event, ui) ->
            token = ui.item.value
            window.location.href = "/pastes/" + token
            return
    return


scheme = "<%= Rails.env['RACK_ENV'] == "production" ? "wss://" : "ws://" %>"
uri = scheme + window.document.location.host + "/"
ws = new WebSocket(uri)

ws.onmessage = (message) ->
  paste = JSON.parse(message.data)
  newLink = ""
  newLink = "[" + paste.language + "] " if paste.language
  newLink += "<a href=\"/pastes/#{paste.token}\">#{paste.title}</a>"
  $("#historyTable tbody").prepend "<tr><td>#{newLink}</td></tr>"
  $("#historyTable tbody tr").slice(20).hide()
  return

